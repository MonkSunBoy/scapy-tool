#! /usr/bin/env python

from scapy.all import *
import time
import os
import logging

class InternetProtocolNumbers:
    ''' INTERNET PROTOCOL NUMBERS
        refenrence: RFC 790(Page 5)
        https://www.rfc-editor.org/rfc/rfc1700.txt
    '''
    data = {
            0   : ('Reserved   ', ' Reserved                              [JBP]'),
            1   : ('ICMP       ', ' Internet Control Message       [RFC792,JBP]'),
            2   : ('IGMP       ', ' Internet Group Management     [RFC1112,JBP]'),
            3   : ('GGP        ', ' Gateway-to-Gateway              [RFC823,MB]'),
            4   : ('IP         ', ' IP in IP (encasulation)               [JBP]'),
            5   : ('ST         ', ' Stream                 [RFC1190,IEN119,JWF]'),
            6   : ('TCP        ', ' Transmission Control           [RFC793,JBP]'),
            7   : ('UCL        ', ' UCL                                    [PK]'),
            8   : ('EGP        ', ' Exterior Gateway Protocol     [RFC888,DLM1]'),
            9   : ('IGP        ', ' any private interior gateway          [JBP]'),
            10  : ('BBN-RCC-MON', ' BBN RCC Monitoring                    [SGC]'),
            11  : ('NVP-II     ', ' Network Voice Protocol         [RFC741,SC3]'),
            12  : ('PUP        ', ' PUP                             [PUP,XEROX]'),
            13  : ('ARGUS      ', ' ARGUS                                [RWS4]'),
            14  : ('EMCON      ', ' EMCON                                 [BN7]'),
            15  : ('XNET       ', ' Cross Net Debugger            [IEN158,JFH2]'),
            16  : ('CHAOS      ', ' Chaos                                 [NC3]'),
            17  : ('UDP        ', ' User Datagram                  [RFC768,JBP]'),
            18  : ('MUX        ', ' Multiplexing                    [IEN90,JBP]'),
            19  : ('DCN-MEAS   ', ' DCN Measurement Subsystems           [DLM1]'),
            20  : ('HMP        ', ' Host Monitoring                [RFC869,RH6]'),
            21  : ('PRM        ', ' Packet Radio Measurement              [ZSU]'),
            22  : ('XNS-IDP    ', ' XEROX NS IDP               [ETHERNET,XEROX]'),
            23  : ('TRUNK-1    ', ' Trunk-1                              [BWB6]'),
            24  : ('TRUNK-2    ', ' Trunk-2                              [BWB6]'),
            25  : ('LEAF-1     ', ' Leaf-1                               [BWB6]'),
            26  : ('LEAF-2     ', ' Leaf-2                               [BWB6]'),
            27  : ('RDP        ', ' Reliable Data Protocol         [RFC908,RH6]'),
            28  : ('IRTP       ', ' Internet Reliable Transaction  [RFC938,TXM]'),
            29  : ('ISO-TP4    ', ' ISO Transport Protocol Class 4 [RFC905,RC77]'),
            30  : ('NETBLT     ', ' Bulk Data Transfer Protocol    [RFC969,DDC1]'),
            31  : ('MFE-NSP    ', ' MFE Network Services Protocol  [MFENET,BCH2]'),
            32  : ('MERIT-INP  ', ' MERIT Internodal Protocol             [HWB]'),
            33  : ('SEP        ', ' Sequential Exchange Protocol        [JC120]'),
            34  : ('3PC        ', ' Third Party Connect Protocol         [SAF3]'),
            35  : ('IDPR       ', ' Inter-Domain Policy Routing Protocol [MXS1]'),
            36  : ('XTP        ', ' XTP                                   [GXC]'),
            37  : ('DDP        ', ' Datagram Delivery Protocol            [WXC]'),
            38  : ('IDPR-CMTP  ', ' IDPR Control Message Transport Proto [MXS1]'),
            39  : ('TP++       ', ' TP++ Transport Protocol               [DXF]'),
            40  : ('IL         ', ' IL Transport Protocol                [DXP2]'),
            41  : ('SIP        ', ' Simple Internet Protocol              [SXD]'),
            42  : ('SDRP       ', ' Source Demand Routing Protocol       [DXE1]'),
            43  : ('SIP-SR     ', ' SIP Source Route                      [SXD]'),
            44  : ('SIP-FRAG   ', ' SIP Fragment                          [SXD]'),
            45  : ('IDRP       ', ' Inter-Domain Routing Protocol   [Sue Hares]'),
            46  : ('RSVP       ', ' Reservation Protocol           [Bob Braden]'),
            47  : ('GRE        ', ' General Routing Encapsulation     [Tony Li]'),
            48  : ('MHRP       ', ' Mobile Host Routing Protocol[David Johnson]'),
            49  : ('BNA        ', ' BNA                          [Gary Salamon]'),
            50  : ('SIPP-ESP   ', ' SIPP Encap Security Payload [Steve Deering]'),
            51  : ('SIPP-AH    ', ' SIPP Authentication Header  [Steve Deering]'),
            52  : ('I-NLSP     ', ' Integrated Net Layer Security  TUBA [GLENN]'),
            53  : ('SWIPE      ', ' IP with Encryption                    [JI6]'),
            54  : ('NHRP       ', ' NBMA Next Hop Resolution Protocol          '),
            55  : ('Unassigned ', 'Unassigned'),
            56  : ('Unassigned ', 'Unassigned'),
            57  : ('Unassigned ', 'Unassigned'),
            58  : ('Unassigned ', 'Unassigned'),
            59  : ('Unassigned ', 'Unassigned'),
            60  : ('Unassigned ', 'Unassigned'),
            61  : ('           ', 'any host internal protocol            [JBP]'),
            62  : ('CFTP       ', 'CFTP                            [CFTP,HCF2]'),
            63  : ('           ', 'any local network                     [JBP]'),
            64  : ('SAT-EXPAK  ', 'SATNET and Backroom EXPAK             [SHB]'),
            65  : ('KRYPTOLAN  ', 'Kryptolan                            [PXL1]'),
            66  : ('RVD        ', 'MIT Remote Virtual Disk Protocol      [MBG]'),
            67  : ('IPPC       ', 'Internet Pluribus Packet Core         [SHB]'),
            68  : ('           ', 'any distributed file system           [JBP]'),
            69  : ('SAT-MON    ', 'SATNET Monitoring                     [SHB]'),
            70  : ('VISA       ', 'VISA Protocol                        [GXT1]'),
            71  : ('IPCV       ', 'Internet Packet Core Utility          [SHB]'),
            72  : ('CPNX       ', 'Computer Protocol Network Executive  [DXM2]'),
            73  : ('CPHB       ', 'Computer Protocol Heart Beat         [DXM2]'),
            74  : ('WSN        ', 'Wang Span Network                     [VXD]'),
            75  : ('PVP        ', 'Packet Video Protocol                 [SC3]'),
            76  : ('BR-SAT-MON ', 'Backroom SATNET Monitoring            [SHB]'),
            77  : ('SUN-ND     ', 'SUN ND PROTOCOL-Temporary             [WM3]'),
            78  : ('WB-MON     ', 'WIDEBAND Monitoring                   [SHB]'),
            79  : ('WB-EXPAK   ', 'WIDEBAND EXPAK                        [SHB]'),
            80  : ('ISO-IP     ', 'ISO Internet Protocol                 [MTR]'),
            81  : ('VMTP       ', 'VMTP                                 [DRC3]'),
            82  : ('SECURE-VMTP', 'SECURE-VMTP                          [DRC3]'),
            83  : ('VINES      ', 'VINES                                 [BXH]'),
            84  : ('TTP        ', 'TTP                                   [JXS]'),
            85  : ('NSFNET-IGP ', 'NSFNET-IGP                            [HWB]'),
            86  : ('DGP        ', 'Dissimilar Gateway Protocol     [DGP,ML109]'),
            87  : ('TCF        ', 'TCF                                  [GAL5]'),
            88  : ('IGRP       ', 'IGRP                            [CISCO,GXS]'),
            89  : ('OSPFIGP    ', 'OSPFIGP                      [RFC1583,JTM4]'),
            90  : ('Sprite-RPC ', 'Sprite RPC Protocol            [SPRITE,BXW]'),
            91  : ('LARP       ', 'Locus Address Resolution Protocol     [BXH]'),
            92  : ('MTP        ', 'Multicast Transport Protocol          [SXA]'),
            93  : ('AX.25      ', 'AX.25 Frames                         [BK29]'),
            94  : ('IPIP       ', 'IP-within-IP Encapsulation Protocol   [JI6]'),
            95  : ('MICP       ', 'Mobile Internetworking Control Pro.   [JI6]'),
            96  : ('SCC-SP     ', 'Semaphore Communications Sec. Pro.    [HXH]'),
            97  : ('ETHERIP    ', 'Ethernet-within-IP Encapsulation     [RXH1]'),
            98  : ('ENCAP      ', 'Encapsulation Header         [RFC1241,RXB3]'),
            99  : ('           ', 'any private encryption scheme         [JBP]'),
            100 : ('GMTP,      ', 'GMTP                                 [RXB5]'),
            101 : ('Unassigned ', 'Unassigned'),
            102 : ('Unassigned ', 'Unassigned'),
            103 : ('Unassigned ', 'Unassigned'),
            104 : ('Unassigned ', 'Unassigned'),
            105 : ('Unassigned ', 'Unassigned'),
            106 : ('Unassigned ', 'Unassigned'),
            107 : ('Unassigned ', 'Unassigned'),
            108 : ('Unassigned ', 'Unassigned'),
            109 : ('Unassigned ', 'Unassigned'),
            110 : ('Unassigned ', 'Unassigned'),
            111 : ('Unassigned ', 'Unassigned'),
            112 : ('Unassigned ', 'Unassigned'),
            113 : ('Unassigned ', 'Unassigned'),
            114 : ('Unassigned ', 'Unassigned'),
            115 : ('Unassigned ', 'Unassigned'),
            116 : ('Unassigned ', 'Unassigned'),
            117 : ('Unassigned ', 'Unassigned'),
            118 : ('Unassigned ', 'Unassigned'),
            119 : ('Unassigned ', 'Unassigned'),
            120 : ('Unassigned ', 'Unassigned'),
            121 : ('Unassigned ', 'Unassigned'),
            122 : ('Unassigned ', 'Unassigned'),
            123 : ('Unassigned ', 'Unassigned'),
            124 : ('Unassigned ', 'Unassigned'),
            125 : ('Unassigned ', 'Unassigned'),
            126 : ('Unassigned ', 'Unassigned'),
            127 : ('Unassigned ', 'Unassigned'),
            128 : ('Unassigned ', 'Unassigned'),
            129 : ('Unassigned ', 'Unassigned'),
            130 : ('Unassigned ', 'Unassigned'),
            131 : ('Unassigned ', 'Unassigned'),
            132 : ('Unassigned ', 'Unassigned'),
            133 : ('Unassigned ', 'Unassigned'),
            134 : ('Unassigned ', 'Unassigned'),
            135 : ('Unassigned ', 'Unassigned'),
            136 : ('Unassigned ', 'Unassigned'),
            137 : ('Unassigned ', 'Unassigned'),
            138 : ('Unassigned ', 'Unassigned'),
            139 : ('Unassigned ', 'Unassigned'),
            140 : ('Unassigned ', 'Unassigned'),
            141 : ('Unassigned ', 'Unassigned'),
            142 : ('Unassigned ', 'Unassigned'),
            143 : ('Unassigned ', 'Unassigned'),
            144 : ('Unassigned ', 'Unassigned'),
            145 : ('Unassigned ', 'Unassigned'),
            146 : ('Unassigned ', 'Unassigned'),
            147 : ('Unassigned ', 'Unassigned'),
            148 : ('Unassigned ', 'Unassigned'),
            149 : ('Unassigned ', 'Unassigned'),
            150 : ('Unassigned ', 'Unassigned'),
            151 : ('Unassigned ', 'Unassigned'),
            152 : ('Unassigned ', 'Unassigned'),
            153 : ('Unassigned ', 'Unassigned'),
            154 : ('Unassigned ', 'Unassigned'),
            155 : ('Unassigned ', 'Unassigned'),
            156 : ('Unassigned ', 'Unassigned'),
            157 : ('Unassigned ', 'Unassigned'),
            158 : ('Unassigned ', 'Unassigned'),
            159 : ('Unassigned ', 'Unassigned'),
            160 : ('Unassigned ', 'Unassigned'),
            161 : ('Unassigned ', 'Unassigned'),
            162 : ('Unassigned ', 'Unassigned'),
            163 : ('Unassigned ', 'Unassigned'),
            164 : ('Unassigned ', 'Unassigned'),
            165 : ('Unassigned ', 'Unassigned'),
            166 : ('Unassigned ', 'Unassigned'),
            167 : ('Unassigned ', 'Unassigned'),
            168 : ('Unassigned ', 'Unassigned'),
            169 : ('Unassigned ', 'Unassigned'),
            170 : ('Unassigned ', 'Unassigned'),
            171 : ('Unassigned ', 'Unassigned'),
            172 : ('Unassigned ', 'Unassigned'),
            173 : ('Unassigned ', 'Unassigned'),
            174 : ('Unassigned ', 'Unassigned'),
            175 : ('Unassigned ', 'Unassigned'),
            176 : ('Unassigned ', 'Unassigned'),
            177 : ('Unassigned ', 'Unassigned'),
            178 : ('Unassigned ', 'Unassigned'),
            179 : ('Unassigned ', 'Unassigned'),
            180 : ('Unassigned ', 'Unassigned'),
            181 : ('Unassigned ', 'Unassigned'),
            182 : ('Unassigned ', 'Unassigned'),
            183 : ('Unassigned ', 'Unassigned'),
            184 : ('Unassigned ', 'Unassigned'),
            185 : ('Unassigned ', 'Unassigned'),
            186 : ('Unassigned ', 'Unassigned'),
            187 : ('Unassigned ', 'Unassigned'),
            188 : ('Unassigned ', 'Unassigned'),
            189 : ('Unassigned ', 'Unassigned'),
            190 : ('Unassigned ', 'Unassigned'),
            191 : ('Unassigned ', 'Unassigned'),
            192 : ('Unassigned ', 'Unassigned'),
            193 : ('Unassigned ', 'Unassigned'),
            194 : ('Unassigned ', 'Unassigned'),
            195 : ('Unassigned ', 'Unassigned'),
            196 : ('Unassigned ', 'Unassigned'),
            197 : ('Unassigned ', 'Unassigned'),
            198 : ('Unassigned ', 'Unassigned'),
            199 : ('Unassigned ', 'Unassigned'),
            200 : ('Unassigned ', 'Unassigned'),
            201 : ('Unassigned ', 'Unassigned'),
            202 : ('Unassigned ', 'Unassigned'),
            203 : ('Unassigned ', 'Unassigned'),
            204 : ('Unassigned ', 'Unassigned'),
            205 : ('Unassigned ', 'Unassigned'),
            206 : ('Unassigned ', 'Unassigned'),
            207 : ('Unassigned ', 'Unassigned'),
            208 : ('Unassigned ', 'Unassigned'),
            209 : ('Unassigned ', 'Unassigned'),
            210 : ('Unassigned ', 'Unassigned'),
            211 : ('Unassigned ', 'Unassigned'),
            212 : ('Unassigned ', 'Unassigned'),
            213 : ('Unassigned ', 'Unassigned'),
            214 : ('Unassigned ', 'Unassigned'),
            215 : ('Unassigned ', 'Unassigned'),
            216 : ('Unassigned ', 'Unassigned'),
            217 : ('Unassigned ', 'Unassigned'),
            218 : ('Unassigned ', 'Unassigned'),
            219 : ('Unassigned ', 'Unassigned'),
            220 : ('Unassigned ', 'Unassigned'),
            221 : ('Unassigned ', 'Unassigned'),
            222 : ('Unassigned ', 'Unassigned'),
            223 : ('Unassigned ', 'Unassigned'),
            224 : ('Unassigned ', 'Unassigned'),
            225 : ('Unassigned ', 'Unassigned'),
            226 : ('Unassigned ', 'Unassigned'),
            227 : ('Unassigned ', 'Unassigned'),
            228 : ('Unassigned ', 'Unassigned'),
            229 : ('Unassigned ', 'Unassigned'),
            230 : ('Unassigned ', 'Unassigned'),
            231 : ('Unassigned ', 'Unassigned'),
            232 : ('Unassigned ', 'Unassigned'),
            233 : ('Unassigned ', 'Unassigned'),
            234 : ('Unassigned ', 'Unassigned'),
            235 : ('Unassigned ', 'Unassigned'),
            236 : ('Unassigned ', 'Unassigned'),
            237 : ('Unassigned ', 'Unassigned'),
            238 : ('Unassigned ', 'Unassigned'),
            239 : ('Unassigned ', 'Unassigned'),
            240 : ('Unassigned ', 'Unassigned'),
            241 : ('Unassigned ', 'Unassigned'),
            242 : ('Unassigned ', 'Unassigned'),
            243 : ('Unassigned ', 'Unassigned'),
            244 : ('Unassigned ', 'Unassigned'),
            245 : ('Unassigned ', 'Unassigned'),
            246 : ('Unassigned ', 'Unassigned'),
            247 : ('Unassigned ', 'Unassigned'),
            248 : ('Unassigned ', 'Unassigned'),
            249 : ('Unassigned ', 'Unassigned'),
            250 : ('Unassigned ', 'Unassigned'),
            251 : ('Unassigned ', 'Unassigned'),
            252 : ('Unassigned ', 'Unassigned'),
            253 : ('Unassigned ', 'Unassigned'),
            254 : ('Unassigned ', 'Unassigned'),
            255 : ('Reserved   ', ' Reserved                              [JBP]')}

logger = logging.getLogger('main')
logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.DEBUG)
logger.setLevel(logging.DEBUG)

def process(x):
    protocol = x[IP].proto
    src = x[IP].src
    dst = x[IP].dst
    proto, desc = InternetProtocolNumbers.data[protocol]

    logger.info(src + '\t->\t' + dst + '\t' + proto)

def main():
    sniff(prn=lambda x: process(x), lfilter=lambda x: hasattr(x, 'type')
            and hex(x.type) == '0x800')

if __name__ == "__main__":
    logger.info('sniff packet......')
    main()

